plugins {
    id 'fabric-loom' version '1.9-SNAPSHOT'
    id 'maven-publish'
}

version = "3.0"
group = "me.videogamesm12"

base {
    archivesName = project.archives_base_name
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:1.14.4"
    mappings "net.fabricmc:yarn:1.14.4+build.18:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    implementation include("net.kyori:adventure-text-serializer-gson:4.17.0")
    implementation include("net.kyori:adventure-text-serializer-plain:4.17.0")
    include "net.kyori:adventure-api:4.17.0"
    include "net.kyori:adventure-key:4.17.0"
    include "net.kyori:adventure-nbt:4.17.0"
    include "net.kyori:examination-api:1.3.0"
    // Extra dependencies required by Adventure's GSON Serializer that is not present in builds by default
    implementation include("net.kyori:adventure-text-serializer-json:4.17.0")
    implementation include("net.kyori:option:1.0.0")

    subprojects.each {
        include project("${it.name}:")
    }
}


allprojects {
    apply plugin: 'fabric-loom'

    ext {
        post_seventeen = false
        seventeen = false
        post_twenty_five = false
    }

    tasks.withType(JavaCompile).configureEach {
        if (seventeen) {
            it.options.release.set(16)
        }
        else if (post_seventeen) {
            it.options.release.set(17)
        }
        else if (post_twenty_five) {
            it.options.release.set(21)
        }
        else {
            it.options.release.set(8)
        }
    }

    repositories {
        exclusiveContent {
            forRepository {
                maven {
                    name = "Modrinth"
                    url = "https://api.modrinth.com/maven"
                }
            }
            filter {
                includeGroup "maven.modrinth"
            }
        }
    }

    // Including this because without it I can't actually use mixins for some reason???
    dependencies {
        modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
        implementation "net.kyori:adventure-api:4.17.0"
        implementation "net.kyori:adventure-key:4.17.0"
        implementation "net.kyori:adventure-nbt:4.17.0"
        implementation "net.kyori:adventure-text-serializer-gson:4.17.0"
        implementation "net.kyori:adventure-text-serializer-plain:4.17.0"
        implementation "net.kyori:examination-api:1.3.0"

        compileOnly 'org.projectlombok:lombok:1.18.34'
        annotationProcessor 'org.projectlombok:lombok:1.18.34'
    }

    processResources {
        inputs.property "version", rootProject.version
        filteringCharset "UTF-8"

        filesMatching("fabric.mod.json") {
            expand "version": rootProject.version
        }
    }

    /*task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier.set("sources")
        from sourceSets.main.allSource
    }*/
}

subprojects {
    version rootProject.version

    dependencies {
        implementation rootProject
    }
}

subprojects.each {
    remapJar.dependsOn("${it.path}:remapJar")
}
